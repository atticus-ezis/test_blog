option_settings:
  aws:elasticbeanstalk:container:python:
    WSGIPath: sandbox_1.wsgi:application
    
  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /static: staticfiles

files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_certbot.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # Install Certbot (for Amazon Linux 2)
      sudo yum install -y epel-release
      sudo amazon-linux-extras enable epel
      sudo yum install -y certbot python-certbot-nginx

      # Stop NGINX to free up port 80 for Certbot
      sudo systemctl stop nginx

      # Request an SSL certificate from Let's Encrypt using Certbot
      sudo certbot certonly --nginx -d blogsforthecriminallyinsane.com -d www.blogsforthecriminallyinsane.com --non-interactive --agree-tos -m atticus.ezis@gmail.com

      # Start NGINX again
      sudo systemctl start nginx

      # Modify the NGINX configuration to automatically redirect HTTP to HTTPS
      sudo tee /etc/nginx/conf.d/ssl.conf > /dev/null <<'EOF'
      server {
          listen 80;
          server_name blogsforthecriminallyinsane.com www.blogsforthecriminallyinsane.com;
          return 301 https://$host$request_uri;
      }

      server {
          listen 443 ssl;
          server_name blogsforthecriminallyinsane.com www.blogsforthecriminallyinsane.com;

          ssl_certificate /etc/letsencrypt/live/blogsforthecriminallyinsane.com/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/blogsforthecriminallyinsane.com/privkey.pem;

          location / {
              proxy_pass http://127.0.0.1:8000; # Update as per your app's backend
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
      EOF

      # Reload NGINX to apply the new configuration
      sudo systemctl reload nginx
